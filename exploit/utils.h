#pragma once

#define _GNU_SOURCE
#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <sys/types.h>
#include <linux/kernel.h>
#include <string.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <sys/ipc.h>
#include <sys/msg.h>
#include <sys/mman.h>
#include <pthread.h>
#include <fcntl.h>
#include <sys/ioctl.h>
#include <errno.h>
#include <assert.h>

// AVUD sources
#define EXAMPLE_DEF
#include "../defines.h"

#define NOKASLR 1
#undef NOKASLR

typedef unsigned long long ull;

extern int avud_fd;

void print_array(ull * array, int array_size);
extern int open_avud();
avud_request * alloc_request();
char * alloc(int size);
extern int avud_ioctl(avud_request * req, unsigned int cmd);
extern int BOF_request(avud_request * req);
